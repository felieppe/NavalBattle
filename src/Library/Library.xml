<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library</name>
    </assembly>
    <members>
        <member name="T:Library.Board">
            <summary>
            Clase Board.
            </summary>
        </member>
        <member name="M:Library.Board.#ctor(System.Char[][],Library.BoardSize)">
            <summary>
            Constructor de la clase Board.
            </summary>
            <param name="boards"></param>
            <param name="boardSize"></param>
        </member>
        <member name="M:Library.Board.InitializeBoard">
            <summary>
            Inicializar la matriz del tablero con etiquetas de fila y columna.
            </summary>
        </member>
        <member name="M:Library.Board.SetBoard(System.Char[][],Library.BoardSize)">
            <summary>
            Set de la clase Board.
            </summary>
            <param name="boards"></param>
            <param name="boardSize"></param>
        </member>
        <member name="M:Library.Board.GetBoard">
            <summary>
            Get de la clase Board.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.Board.GetBoardSize">
            <summary>
            Devuelve tamaño del tablero.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Library.BoardSize">
            <summary>
            Clase para establecer las dimensiones del tablero.
            </summary>
        </member>
        <member name="P:Library.BoardSize.Rows">
            <summary>
            Filas del tablero.
            </summary> <summary>
            Columnas del tablero.
            </summary>
            <value></value>
        </member>
        <member name="M:Library.BoardSize.#ctor(System.Int32,System.Int32)">
            <summary>
            Dimensiones del tablero.
            </summary>
            <param name="rows"></param>
            <param name="columns"></param>
        </member>
        <member name="T:Library.Game">
            <summary>
            Esta clase representa una p artida.
            </summary>
        </member>
        <member name="F:Library.Game.Players">
            <summary>
            Lista de jugadores del juego.
            </summary>
            <value>Lista con elementos de tipo Player</value>
        </member>
        <member name="M:Library.Game.#ctor(Library.Player,Library.Player)">
            <summary>
            Constructor de la clase Game.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
        </member>
        <member name="M:Library.Game.GetPlayers">
            <summary>
            Obtiene los jugadores guardados.
            </summary>
            <returns>
            Una lista con elementos de tipo Player.
            </returns>
        </member>
        <member name="M:Library.GameLogic.#ctor(Library.BoardSize,System.Int32)">
            <summary>
            GameLogic Class
            </summary>
            <param name="boardSize"></param>
            <param name="totalShips"></param>
        </member>
        <member name="M:Library.GameLogic.VerifyAttack(System.Int32,System.Int32)">
            <summary>
            Verifica el ataque.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Library.GameLogic.PlaceShip(System.Int32,System.Int32)">
            <summary>
            Posiciona barco
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:Library.GameLogic.Attack(System.Int32,System.Int32)">
            <summary>
            Ataque.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:Library.GameLogic.InitializeShipCellList(System.Int32)">
            <summary>
            Crea una lista con la cantidad de barcos.
            </summary>
            <param name="totalShips"></param>
        </member>
        <member name="M:Library.GameLogic.VerifyShipCellList">
            <summary>
            Si le pega a un barco disminuye en 1 la cantidad de barcos.
            </summary>
        </member>
        <member name="M:Library.GameLogic.GetShipCellList">
            <summary>
            Para que funcione el test.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Library.GameLogic.GetBoard">
            <summary>
            Para que funcione el test.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Library.Player">
            <summary>
            Esta clase representa un jugador.
            </summary>
        </member>
        <member name="P:Library.Player.Id">
            <summary>
            Id del jugador.
            </summary>
            <value>Id del jugador</value>
        </member>
        <member name="P:Library.Player.Username">
            <summary>
            Nombre de usuario del jugador
            </summary>
            <value>Username del jugador</value>
        </member>
        <member name="M:Library.Player.#ctor(System.String)">
            <summary>
            Constructor de la clase Game.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Library.Player.SetId(System.String)">
            <summary>
            Establece el ID del jugador.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Library.Player.SetUsername(System.String)">
            <summary>
            Establece el username del jugador.
            </summary>
            <param name="username"></param>
        </member>
        <member name="M:Library.Player.GetId">
            <summary>
            Obtiene el ID del jugador
            </summary>
            <returns>
            El ID del jugador.
            </returns>
        </member>
        <member name="M:Library.Player.GetUsername">
            <summary>
            Obtiene el username del jugador
            </summary>
            <returns>
            El Username del jugador.
            </returns>
        </member>
        <member name="T:Library.Printer">
            <summary>
            Class Printer.
            </summary>
        </member>
        <member name="M:Library.Printer.#ctor(Library.Board)">
            <summary>
            Constructor.
            </summary>
            <param name="board"></param>
            <param name="rows"></param>
            <param name="columns"></param>
        </member>
        <member name="M:Library.Printer.Print">
            <summary>
            Impresora.
            </summary>
        </member>
        <member name="T:Library.UserManager">
            <summary>
            Esta clase representa al mananger de usuarios.
            </summary>
        </member>
        <member name="F:Library.UserManager.Players">
            <summary>
            Lista de jugadores registrados en el UserManager.
            </summary>
            <value>Lista con elementos de tipo Player</value>
        </member>
        <member name="F:Library.UserManager.InGamePlayers">
            <summary>
            Lista de jugadores que actualmente estan jugando.
            </summary>
            <value>Lista con elementos de tipo Player</value>
        </member>
        <member name="M:Library.UserManager.#ctor">
            <summary>
            Constructor de la clase Game.
            </summary>
        </member>
        <member name="M:Library.UserManager.AddPlayer(Library.Player)">
            <summary>
            Añade un jugador a la lista de jugadores.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Library.UserManager.RemovePlayer(Library.Player)">
            <summary>
            Elimina un jugador en especifico de la lista de jugadores.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Library.UserManager.AddInGamePlayers(Library.Game)">
            <summary>
            Añade a los jugadores de un juego a la lista de jugadores en juego.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:Library.UserManager.NewGame">
            <summary>
            Crea una partida con dos jugadores al azar que esten disponibles.
            </summary>
            <returns>
            Una partida.
            </returns>
        </member>
        <member name="M:Library.UserManager.GetPlayers">
            <summary>
            Obtiene los jugadores guardados.
            </summary>
            <returns>
            Una lista con elementos de tipo Player.
            </returns>
        </member>
        <member name="M:Library.UserManager.GetInGamePlayers">
            <summary>
            Obtiene los jugadores en juego guardados.
            </summary>
            <returns>
            Una lista con elementos de tipo Player.
            </returns>
        </member>
    </members>
</doc>
